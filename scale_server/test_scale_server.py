import socket
import wave
import struct
import time

# ==== –ü–ê–†–ê–ú–ï–¢–†–´ UDP ====
UDP_IP = "0.0.0.0"  # –ü—Ä–∏–Ω–∏–º–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –≤—Å–µ—Ö
UDP_PORT = 5005     # –ü–æ—Ä—Ç (–¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å ESP8266)
PACKET_SIZE = 128 * 2   # –†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞ (128 —Å—ç–º–ø–ª–æ–≤ * 2 –±–∞–π—Ç–∞)

# ==== –ü–ê–†–ê–ú–ï–¢–†–´ –ê–£–î–ò–û ====
SAMPLE_RATE = 16000  # –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏ 16 –∫–ì—Ü
SAMPLE_WIDTH = 2     # 16 –±–∏—Ç (2 –±–∞–π—Ç–∞)
CHANNELS = 1         # –ú–æ–Ω–æ

# ==== –°–û–ó–î–ê–Å–ú UDP-–°–û–ö–ï–¢ ====
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
sock.bind((UDP_IP, UDP_PORT))

print(f"üéôÔ∏è  –ü—Ä–∏—ë–º –∞—É–¥–∏–æ –Ω–∞ {UDP_IP}:{UDP_PORT}...")

# ==== –ì–õ–ê–í–ù–´–ô –¶–ò–ö–õ ====
try:
    packet_count = 0
    audio_data = bytearray()
    # –ù–∞—á–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
    start_time = time.time()

    while True:
        # ==== –°–û–ó–î–ê–Å–ú WAV-–§–ê–ô–õ ====
        filename = f"received_audio.wav"  # –ò–º—è —Ñ–∞–π–ª–∞ —Å –º–µ—Ç–∫–æ–π –≤—Ä–µ–º–µ–Ω–∏
        wav_file = wave.open(filename, "wb")
        wav_file.setnchannels(CHANNELS)
        wav_file.setsampwidth(SAMPLE_WIDTH)
        wav_file.setframerate(SAMPLE_RATE)
        data, addr = sock.recvfrom(PACKET_SIZE)  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        packet_count += 1

        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–Ω—è—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –±—É—Ñ–µ—Ä
        audio_data.extend(data)
            
        # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ 10 —Å–µ–∫—É–Ω–¥ ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –∂–¥—ë–º 5 —Å–µ–∫—É–Ω–¥
        if time.time() - start_time >= 10:
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∞—É–¥–∏–æ—Ñ–∞–π–ª
            wav_file.writeframes(audio_data)
            print(f"‚úÖ –ó–∞–ø–∏—Å–∞–Ω–æ 10 —Å–µ–∫—É–Ω–¥ –∞—É–¥–∏–æ ({len(audio_data)} –±–∞–π—Ç) –≤ —Ñ–∞–π–ª.")
            print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ –ø–∞–∫–µ—Ç–æ–≤: {packet_count}  ({len(audio_data)} –±–∞–π—Ç)")
            audio_data.clear()  # –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä
            packet_count = 0
            wav_file.close()
            # –û–∂–∏–¥–∞–µ–º 5 —Å–µ–∫—É–Ω–¥
            print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥...")
            time.sleep(5)
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –±–ª–æ–∫–∞
            start_time = time.time()

except KeyboardInterrupt:
    print("\n‚ùå –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")

finally:
    sock.close()

    print(f"‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {filename}")


# import socket
# import wave
# import struct
# import time

# # ==== –ü–ê–†–ê–ú–ï–¢–†–´ UDP ====
# UDP_IP = "0.0.0.0"  # –ü—Ä–∏–Ω–∏–º–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –≤—Å–µ—Ö
# UDP_PORT = 5005     # –ü–æ—Ä—Ç (–¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å ESP8266)
# PACKET_SIZE = 256   # –†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞ (128 —Å—ç–º–ø–ª–æ–≤ * 2 –±–∞–π—Ç–∞)

# # ==== –ü–ê–†–ê–ú–ï–¢–†–´ –ê–£–î–ò–û ====
# SAMPLE_RATE = 16000  # –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏ 16 –∫–ì—Ü
# SAMPLE_WIDTH = 2     # 16 –±–∏—Ç (2 –±–∞–π—Ç–∞)
# CHANNELS = 1         # –ú–æ–Ω–æ

# # ==== –°–û–ó–î–ê–Å–ú UDP-–°–û–ö–ï–¢ ====
# sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
# sock.bind((UDP_IP, UDP_PORT))

# print(f"üéôÔ∏è  –ü—Ä–∏—ë–º –∞—É–¥–∏–æ –Ω–∞ {UDP_IP}:{UDP_PORT}...")

# # ==== –ì–õ–ê–í–ù–´–ô –¶–ò–ö–õ ====
# try:
#     packet_count = 0
#     audio_data = bytearray()

#     while True:
#         # ==== –°–¢–ê–†–¢ –ó–ê–ü–ò–°–ò ====
#         print("üî¥ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–∏—Å—å... 10 —Å–µ–∫—É–Ω–¥")
        
#         # –°–æ–∑–¥–∞—ë–º WAV-—Ñ–∞–π–ª –±–µ–∑ –º–µ—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
#         filename = "received_audio.wav"
#         wav_file = wave.open(filename, "wb")
#         wav_file.setnchannels(CHANNELS)
#         wav_file.setsampwidth(SAMPLE_WIDTH)
#         wav_file.setframerate(SAMPLE_RATE)

#         # –ü—Ä–∏–Ω–∏–º–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ 10 —Å–µ–∫—É–Ω–¥
#         start_time = time.time()
#         while time.time() - start_time < 10:
#             data, addr = sock.recvfrom(PACKET_SIZE)  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
#             packet_count += 1

#             # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–Ω—è—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –±—É—Ñ–µ—Ä
#             audio_data.extend(data)

#         # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ WAV
#         wav_file.writeframes(audio_data)
#         print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ –ø–∞–∫–µ—Ç–æ–≤: {packet_count}  ({len(audio_data)} –±–∞–π—Ç)")

#         # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π WAV —Ñ–∞–π–ª
#         wav_file.close()

#         # ==== –û–ñ–ò–î–ê–ù–ò–ï 5 –°–ï–ö–£–ù–î ====
#         print("‚è≥ –û–∂–∏–¥–∞–µ–º 5 —Å–µ–∫—É–Ω–¥...")
#         time.sleep(5)

#         # –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∑–∞–ø–∏—Å–∏
#         audio_data.clear()
#         packet_count = 0

# except KeyboardInterrupt:
#     print("\n‚ùå –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")

# finally:
#     sock.close()
#     print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")
