import socket
import wave
import struct

# ==== –ü–ê–†–ê–ú–ï–¢–†–´ UDP ====
UDP_IP = "0.0.0.0"  # –ü—Ä–∏–Ω–∏–º–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –≤—Å–µ—Ö
UDP_PORT = 5005     # –ü–æ—Ä—Ç (–¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å ESP8266)
PACKET_SIZE = 256   # –†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞ (128 —Å—ç–º–ø–ª–æ–≤ * 2 –±–∞–π—Ç–∞)

# ==== –ü–ê–†–ê–ú–ï–¢–†–´ –ê–£–î–ò–û ====
SAMPLE_RATE = 16000  # –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏ 16 –∫–ì—Ü
SAMPLE_WIDTH = 2     # 16 –±–∏—Ç (2 –±–∞–π—Ç–∞)
CHANNELS = 1         # –ú–æ–Ω–æ

# ==== –°–û–ó–î–ê–Å–ú UDP-–°–û–ö–ï–¢ ====
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
sock.bind((UDP_IP, UDP_PORT))

# ==== –°–û–ó–î–ê–Å–ú WAV-–§–ê–ô–õ ====
filename = f"received_audio.wav"  # –ò–º—è —Ñ–∞–π–ª–∞ —Å –º–µ—Ç–∫–æ–π –≤—Ä–µ–º–µ–Ω–∏
wav_file = wave.open(filename, "wb")
wav_file.setnchannels(CHANNELS)
wav_file.setsampwidth(SAMPLE_WIDTH)
wav_file.setframerate(SAMPLE_RATE)

print(f"üéôÔ∏è  –ü—Ä–∏—ë–º –∞—É–¥–∏–æ –Ω–∞ {UDP_IP}:{UDP_PORT}...")

# ==== –ì–õ–ê–í–ù–´–ô –¶–ò–ö–õ ====
try:
    packet_count = 0
    audio_data = bytearray()

    while True:
        data, addr = sock.recvfrom(PACKET_SIZE)  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        packet_count += 1

        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–Ω—è—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –±—É—Ñ–µ—Ä
        audio_data.extend(data)

        # –ö–∞–∂–¥—ã–µ 100 –ø–∞–∫–µ—Ç–æ–≤ (~0.8 —Å–µ–∫) –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ WAV
        if packet_count % 100 == 0:
            wav_file.writeframes(audio_data)  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª
            print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ –ø–∞–∫–µ—Ç–æ–≤: {packet_count}  ({len(audio_data)} –±–∞–π—Ç)")
            audio_data.clear()  # –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä

except KeyboardInterrupt:
    print("\n‚ùå –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")

finally:
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
    if audio_data:
        wav_file.writeframes(audio_data)
    wav_file.close()
    sock.close()
    print(f"‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {filename}")
